{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","console","log","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","state","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","to","active","href","role","model","onSubmit","htmlFor","md","text","id","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","imgStyle","maxHeight","maxWidth","RenderLeader","left","middle","object","style","body","heading","About","leaders","map","i","key","title","list","RenderMenuItem","onClick","width","Menu","menu","dishes","CommentForm","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","isOpen","toggle","value","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Fragment","dark","expand","height","navbar","innerRef","input","Footer","addComment","payload","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","addLeaders","LeadersFailed","Main","selectedDishId","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","feedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5e90dab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle\r\n} from \"reactstrap\";\r\nimport { FadeTransform } from \"react-animation-components\";\r\n\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n  console.log(errMess);\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>;\r\n  } else if (item) {\r\n    return (\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: \"scale(0.5) translateY(-50%)\"\r\n        }}\r\n      >\r\n        <Card>\r\n          <CardImg src={baseUrl + item.image} alt={item.name} />\r\n          <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? (\r\n              <CardSubtitle>{item.designation}</CardSubtitle>\r\n            ) : null}\r\n            <CardText>{item.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n  } else return <div></div>;\r\n}\r\n\r\nfunction Home(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.dish}\r\n            isLoading={props.dishesLoading}\r\n            errMess={props.dishesErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.promotion}\r\n            isLoading={props.promoLoading}\r\n            errMess={props.promoErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.leader} \r\n          isLoading={props.leaderLoading}\r\n           errMess={props.leaderErrMess}/>\r\n        \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors, actions } from \"react-redux-form\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\nconst isNumber = val => !isNaN(Number(val));\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.props.postFeedback(\r\n      values.firstname,\r\n      values.lastname,\r\n      values.telnum,\r\n      values.email,\r\n      values.agree,\r\n      values.contactType,\r\n      values.message\r\n    );\r\n    this.props.resetFeedbackForm();\r\n    // event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-primary\"\r\n                href=\"tel:+85212345678\"\r\n              >\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a role=\"button\" className=\"btn btn-info\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-success\"\r\n                href=\"mailto:confusion@food.net\"\r\n              >\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <Form\r\n              model=\"feedback\"\r\n              onSubmit={values => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \" Required\",\r\n                      minLength: \" Must be greater than 2 characters\",\r\n                      maxLength: \" Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \" Required\",\r\n                      minLength: \" Must be greater than 2 characters\",\r\n                      maxLength: \" Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \" Required\",\r\n                      minLength: \" Must be greater than 2 numbers\",\r\n                      maxLength: \" Must be 15 numbers or less\",\r\n                      isNumber: \" Must be a number\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \" Required\",\r\n                      validEmail: \"Invalid Email Address\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        name=\"agree\"\r\n                        className=\"form-check-input\"\r\n                      />{\" \"}\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".message\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows=\"12\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  CardBody,\n  CardHeader,\n  Media\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\";\n\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nconst imgStyle = {\n  maxHeight: 128,\n  maxWidth: 128\n}\nfunction RenderLeader(props) {\n  return (\n\n    \n    <Media>\n      <Media left middle href=\"#\">\n        <Media\n          object className=\"img-thumbnail\"  \n          src={baseUrl + props.leader.image}\n          alt={props.leader.name} style={imgStyle} \n        />\n      </Media>\n      <Media body className=\"pl-5\">\n        <Media heading>{props.leader.name}</Media>\n        <p>{props.leader.designation}</p>\n        <p>{props.leader.description}</p>\n      </Media>\n    </Media>\n  );\n}\n\nfunction About(props) {\n  let leaders = \"\";\n  if (props.leaders.isLoading) {\n    leaders = (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  } else if (props.leaders.errMess) {\n    leaders = (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h4>{props.errMess}</h4>\n        </div>\n      </div>\n    );\n  } else if (props.leaders.leaders) {\n    leaders = props.leaders.leaders.map((leader, i) => {\n      return (\n        <Fade in>\n          <li className=\"list-unstyled\">\n            <RenderLeader key={i} leader={leader}></RenderLeader>\n          </li>\n        </Fade>\n      );\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/home\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"col-12\">\n          <h3>About Us</h3>\n          <hr />\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-12 col-md-6\">\n          <h2>Our History</h2>\n          <p>\n            Started in 2010, Ristorante con Fusion quickly established itself as\n            a culinary icon par excellence in Hong Kong. With its unique brand\n            of world fusion cuisine that can be found nowhere else, it enjoys\n            patronage from the A-list clientele in Hong Kong. Featuring four of\n            the best three-star Michelin chefs in the world, you never know what\n            will arrive on your plate the next time you visit us.\n          </p>\n          <p>\n            The restaurant traces its humble beginnings to{\" \"}\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\n            Peter Pan, that featured for the first time the world's best\n            cuisines in a pan.\n          </p>\n        </div>\n        <div className=\"col-12 col-md-5\">\n          <Card>\n            <CardHeader className=\"bg-primary text-white\">\n              Facts At a Glance\n            </CardHeader>\n            <CardBody>\n              <dl className=\"row p-1\">\n                <dt className=\"col-6\">Started</dt>\n                <dd className=\"col-6\">3 Feb. 2013</dd>\n                <dt className=\"col-6\">Major Stake Holder</dt>\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                <dt className=\"col-6\">Last Year's Turnover</dt>\n                <dd className=\"col-6\">$1,250,375</dd>\n                <dt className=\"col-6\">Employees</dt>\n                <dd className=\"col-6\">40</dd>\n              </dl>\n            </CardBody>\n          </Card>\n        </div>\n        <div className=\"col-12\">\n          <Card>\n            <CardBody className=\"bg-faded\">\n              <blockquote className=\"blockquote\">\n                <p className=\"mb-0\">\n                  You better cut the pizza in four pieces because I'm not hungry\n                  enough to eat six.\n                </p>\n                <footer className=\"blockquote-footer\">\n                  Yogi Berra,\n                  <cite title=\"Source Title\">\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\n                    2014\n                  </cite>\n                </footer>\n              </blockquote>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-12\">\n          <h2 className=\"text-left\">Corporate Leadership</h2>\n        </div>\n        <div className=\"col-sm-12\">\n          <Media list>\n          <Stagger in>\n              {leaders}\n              </Stagger>\n          </Media>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","\r\nimport React from 'react';\r\nimport {\r\n    Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n             <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardImg, CardText, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Row, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // local state for local form\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal} >\r\n                    <span className=\"fa fa-pencil fa-lg\"></span>\r\n                     Submit Comment\r\n                </Button>\r\n\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}> Submit Comment </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                <Col md={10}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option value=''>--None--</option>\r\n                                        <option value='1'>1</option>\r\n                                        <option value='2'>2</option>\r\n                                        <option value='3'>3</option>\r\n                                        <option value='4'>4</option>\r\n                                        <option value='5'>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={2}>Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\nif(dish!==null)\r\n         {   return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                 <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n            </div>\r\n        );\r\n    }\r\n\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n\r\n        }\r\n    }\r\n        \r\n    \r\n\r\n\r\n\r\n    function RenderComments({comments,postComment,dishId}){\r\n        if(comments!=null){\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n\r\n                  \r\n                </div>\r\n            );\r\n        }else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) \r\n        return (\r\n            <div className=\"container\" >\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                   <RenderDish dish={props.dish} />\r\n                    \r\n              \r\n                \r\n                <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n                    /> \r\n                    </div>\r\n            </div>\r\n        )\r\n\r\n    \r\n\r\n}\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\n//import { Navbar, NavbarBrand, Jumbotron } from 'reactstrap';\r\nimport '../App.css';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\n    import { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n\r\n        };\r\n        \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n      \r\n\r\n    render() {\r\n        \r\n     \r\n        return (\r\n\r\n            <React.Fragment>\r\n                <div>\r\n                    <Navbar dark expand=\"md\">\r\n                        <div className=\"container\">\r\n                            <NavbarToggler onClick={this.toggleNav} />\r\n                            <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                                <Nav navbar>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            </Collapse>\r\n                        </div>\r\n                    </Navbar>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n        <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n        <ModalBody>\r\n        <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={(input) => this.username = input} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innerRef={(input) => this.password = input}  />\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\"\r\n                                innerRef={(input) => this.remember = input}  />\r\n                                Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>\r\n                    \r\n        </ModalBody>\r\n    </Modal>\r\n                    \r\n                    <Jumbotron>\r\n                        <div className=\"container\">\r\n                            <div className=\"row row-header\">\r\n                                <div className=\"col-12 col-sm-6\">\r\n                                    <h1>Ristorante con Fusion</h1>\r\n                                    <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Jumbotron>\r\n                </div>\r\n                {/* <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron> */}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                    <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nimport { baseUrl } from '../shared/baseUrl';\r\nexport const addComment=(comment)=>({\r\n    type:ActionTypes.ADD_COMMENT,\r\n    payload:comment\r\n});\r\n\r\nexport const postFeedback=(values)=>(dispatch)=>{\r\n    return fetch(baseUrl+'feedback',{\r\n        method:\"POST\",\r\n        body:JSON.stringify(values),\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        credentials:\"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n      .then(response=>response.json())\r\n      .then(feedback=>alert(JSON.stringify(feedback)))\r\n      .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n\r\nexport const postComment=(dishId,rating,author,comment)=>(dispatch)=>{\r\n    const newComment={\r\n        dishId:dishId,\r\n        rating:rating,\r\n        author:author,\r\n        comment:comment\r\n    };\r\n    newComment.date=new Date().toISOString();\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n\r\nexport  const fetchDishes =()=>(dispatch)=>{\r\n    return fetch(baseUrl+'dishes')\r\n    .then(response=>{\r\n        if(response.ok)\r\n        return response;\r\n        else\r\n        {\r\n            var error=new Error('Error '+response.status +' :'+response.statusText);\r\n            error.response=response;\r\n            throw error;\r\n        }\r\n    },error=>{\r\n        var errmess=new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error=>dispatch(dishesFailed(error.message)));\r\n\r\n}\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(LeadersFailed(error.message)));\r\n};\r\nexport const addLeaders=(leaders)=>({\r\n    type:ActionTypes.ADD_LEADERS,\r\n    payload:leaders\r\n});\r\n\r\nexport const LeadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\nexport const LeadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\nexport const ADD_PROMOS = \"ADD_PROMOS\";\r\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\r\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { actions } from \"react-redux-form\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nimport Home from \"./HomeComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport Menu from \"./MenuComponent\";\r\nimport DishDetail from \"./DishdetailComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  postComment,\r\n  addComment,\r\n  fetchDishes,\r\n  fetchComments,\r\n  fetchPromos,\r\n  fetchLeaders,\r\n  postFeedback\r\n} from \"../redux/ActionCreators\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addComment: (dishId, rating, author, comment) =>\r\n    dispatch(addComment(dishId, rating, author, comment)),\r\n  postComment: (dishId, rating, author, comment) =>\r\n    dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (\r\n    firstname,\r\n    lastname,\r\n    telnum,\r\n    email,\r\n    agree,\r\n    contactType,\r\n    message\r\n  ) =>\r\n    dispatch(\r\n      postFeedback(\r\n        firstname,\r\n        lastname,\r\n        telnum,\r\n        email,\r\n        agree,\r\n        contactType,\r\n        message\r\n      )\r\n    ),\r\n  fetchDishes: () => {\r\n    dispatch(fetchDishes());\r\n  },\r\n  resetFeedbackForm: () => {\r\n    dispatch(actions.reset(\"feedback\"));\r\n  },\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nclass Main extends Component {\r\n  onDishSelect(dishId) {\r\n    this.setState({ selectedDishId: dishId });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(promo => promo.featured)[0]\r\n          }\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader)=>leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail\r\n          dish={\r\n            this.props.dishes.dishes.filter(\r\n              dish => dish.id === parseInt(match.params.dishId, 10)\r\n            )[0]\r\n          }\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter(\r\n            comment => comment.dishId === parseInt(match.params.dishId, 10)\r\n          )}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n          <TransitionGroup>\r\n            <CSSTransition\r\n              key={this.props.location.key}\r\n              classNames=\"page\"\r\n              timeout={300}\r\n            >\r\n              <Switch location={this.props.location}>\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route\r\n                  exact\r\n                  path=\"/aboutus\"\r\n                  component={() => <About leaders={this.props.leaders} />}\r\n                />\r\n                } />\r\n                <Route\r\n                  exact\r\n                  path=\"/menu\"\r\n                  component={() => <Menu dishes={this.props.dishes} />}\r\n                />\r\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                <Route\r\n                  exact\r\n                  path=\"/contactus\"\r\n                  component={() => (\r\n                    <Contact\r\n                      resetFeedbackForm={this.props.resetFeedbackForm}\r\n                      postFeedback={this.props.postFeedback}\r\n                    />\r\n                  )}\r\n                />\r\n                <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import { DISHES } from '../shared/dishes';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n         return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Leaders = (\r\n  state = { isLoading: true, errMess: null, leaders: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        leaders: action.payload\r\n      };\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n    case ActionTypes.LEADERS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\n\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <Provider store={store}>\n\n      <BrowserRouter>\n      <div className=\"App\">\n        <Main />\n      </div>\n    </BrowserRouter>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';import { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    )\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}